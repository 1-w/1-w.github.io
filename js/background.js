function init(){const e=document.querySelector("#canvas");camera=new PerspectiveCamera(85,window.innerWidth/window.innerHeight,.01,1e5),(scene=new Scene).background=bgColor,(renderer=new WebGLRenderer({canvas:e,antialias:!0,alpha:!1,stencil:!1,depth:!1})).setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),renderer.gammaFactor=2.2,renderer.outputEncoding=sRGBEncoding,window.addEventListener("resize",onWindowResize),cameraPath=new Curves.KnotCurve,cameraPathGeom=new TubeGeometry(cameraPath,50,2,3,!0);let o=new GLTFLoader;const t=new DRACOLoader;t.setDecoderPath("./js/draco/gltf/"),o.setDRACOLoader(t),o.load("./img/gmDraco.gltf",function(e){let o=e.scene.children[0].geometry;o.center();const t=new PointsMaterial({color:gmColor,size:1.2,blending:NoBlending,transparent:!1,sizeAttenuation:!1,vertexColors:!1});t.color.convertSRGBToLinear();let a=new Points(o,t);a.rotation.x=90*Math.PI/180,a.rotation.y=200*Math.PI/180,a.rotation.z=80*Math.PI/180,a.position.x+=20,a.position.y+=50,a.position.z+=60,a.matrixAutoUpdate=!1,a.scale.multiplyScalar(3),a.updateMatrixWorld(),a.updateMatrix(),scene.add(a)},function(){},function(){});let a=new GLTFLoader;const n=new DRACOLoader;n.setDecoderPath("./js/draco/gltf/"),a.setDRACOLoader(n),a.load("/img/wmDraco.gltf",function(e){let o=e.scene.children[0].geometry;o.center();const t=new PointsMaterial({color:wmColor,size:1,blending:NoBlending,transparent:!1,sizeAttenuation:!1,vertexColors:!1});t.color.convertSRGBToLinear();let a=new Points(o,t);a.rotation.x=90*Math.PI/180,a.rotation.y=200*Math.PI/180,a.rotation.z=80*Math.PI/180,a.position.x+=20,a.position.y+=50,a.position.z+=60.001,a.matrixAutoUpdate=!1,a.scale.multiplyScalar(3),a.updateMatrixWorld(),a.updateMatrix(),scene.add(a)},function(){},function(){})}function animate(){requestAnimationFrame(animate),window.paused||animateCamera()}function animateCamera(){const e=Date.now()%looptime/looptime;cameraPathGeom.parameters.path.getPointAt(e,cameraPosition);const o=cameraPathGeom.tangents.length,t=e*o,a=Math.floor(t),n=(a+1)%o;binormal.subVectors(cameraPathGeom.binormals[n],cameraPathGeom.binormals[a]),binormal.multiplyScalar(t-a).add(cameraPathGeom.binormals[a]),cameraPathGeom.parameters.path.getTangentAt(e,direction),normal.copy(binormal).cross(direction),cameraPosition.add(normal.clone().multiplyScalar(0));const r=cameraPosition.distanceTo(oldCameraPosition);camera.position.copy(cameraPosition),cameraPathGeom.parameters.path.getPointAt((e+30/cameraPathGeom.parameters.path.getLength())%1,lookAt);let i=new Vector3(0,10,0);lookAt.copy(cameraPosition).add(i),camera.matrix.lookAt(camera.position,lookAt,i),camera.quaternion.setFromRotationMatrix(camera.matrix),Math.abs(r)>.1&&(oldCameraPosition.copy(cameraPosition),renderer.render(scene,camera))}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}import{Vector3,PerspectiveCamera,Group,Scene,Color,WebGLRenderer,TubeGeometry,PointsMaterial,NoBlending,Points,sRGBEncoding}from"./three.module.js";import{GLTFLoader}from"./GLTFLoader.js";import{DRACOLoader}from"./DRACOLoader.js";import{Curves}from"./CurveExtras.js";const bgColor=new Color(4742254);bgColor.convertSRGBToLinear();const gmColor=new Color(16730441),wmColor=new Color(4849481);let camera,scene,renderer,group,cameraPath,cameraPathGeom;const looptime=8e4,cameraPosition=new Vector3,binormal=new Vector3,direction=new Vector3,normal=new Vector3,lookAt=new Vector3,oldCameraPosition=new Vector3;init(),animate();